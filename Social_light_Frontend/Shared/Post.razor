@inject ICommentService commentService
@attribute [Authorize]
<div class="post">
    <div class="post-header">
        <img src="https://cdn.pixabay.com/photo/2023/09/05/16/40/sunrise-8235464_1280.jpg" alt="Profile Image" class="profile-image" />
        <span class="profile-name">@PostItem?.User?.Name</span>
    </div>
    <div class="post-content">
        @if (!string.IsNullOrEmpty(PostItem?.PostImage))
        {
            <img src="@PostItem.PostImage" alt="Post Image" class="post-image" />
        }
        <p>@PostItem?.Content</p>
    </div>
    <div class="user-icons">
        <svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" fill="currentColor" class="bi bi-heart-fill" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z"/>
        </svg>
        <svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" fill="currentColor" class="bi bi-chat" viewBox="0 0 16 16" @onclick="ToggleCommentInput">
            <path d="M2.678 11.894a1 1 0 0 1 .287.801 10.97 10.97 0 0 1-.398 2c1.395-.323 2.247-.697 2.634-.893a1 1 0 0 1 .71-.074A8.06 8.06 0 0 0 8 14c3.996 0 7-2.807 7-6 0-3.192-3.004-6-7-6S1 4.808 1 8c0 1.468.617 2.83 1.678 3.894zm-.493 3.905a21.682 21.682 0 0 1-.713.129c-.2.032-.352-.176-.273-.362a9.68 9.68 0 0 0 .244-.637l.003-.01c.248-.72.45-1.548.524-2.319C.743 11.37 0 9.76 0 8c0-3.866 3.582-7 8-7s8 3.134 8 7-3.582 7-8 7a9.06 9.06 0 0 1-2.347-.306c-.52.263-1.639.742-3.468 1.105z"/>
        </svg>
    </div>

    <div class="container mt-2">
        @if (showCommentInput)
        {
            <div class="row">
                <div class="col-md-12">
                    <EditForm Model="commentCreateDto" OnValidSubmit="PostComment" class="row">
                        <div class="10">
                                <InputText @bind-Value="@commentCreateDto.Content" class="form-control" placeholder="Add a comment" />
                                <ValidationMessage For="@(() => commentCreateDto.Content)" />
                        </div>
                        <div class="2">
                            <button type="submit" class="btn btn-primary" disabled="@isPosting">Post</button>
                            @if (isPosting)
                            {
                                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                <p>Posting...</p>
                            }
                        </div>
                    </EditForm>
                </div>
            </div>

            <div class="comments">
                @if (PostItem?.Comments.Count() > 0 )
                {
                    @foreach (var comment in PostItem.Comments)
                    {
                        <div class="comment">
                            <img src="https://cdn.pixabay.com/photo/2023/09/05/16/40/sunrise-8235464_1280.jpg" alt="Profile Image" class="comment-profile-image" />
                            <span class="comment-text">@comment.Content</span>
                        </div>
                    }
                }
                else
                {
                    <p>No comments yet.</p>
                }
            </div>
        }
    </div>
</div>

@code {
    [Parameter] 
    public PostDto PostItem { get; set; }
    private bool showCommentInput = false;
    private CommentCreateDto commentCreateDto = new CommentCreateDto();
    private bool isPosting = false;

    private async Task ToggleCommentInput()
    {
        PostItem.Comments = await commentService.GetPostComments(PostItem.Id);
        showCommentInput = !showCommentInput;
    }

    private async Task PostComment()
    {
        isPosting = true;
        commentCreateDto.PostId = PostItem.Id.ToString();
        Console.WriteLine(commentCreateDto.Content);
        var result = await commentService.CreateComment(commentCreateDto);
        
        if (result.IsSuccess)
        {
            PostItem.Comments = await commentService.GetPostComments(PostItem.Id);
            commentCreateDto = new CommentCreateDto();
        }
        isPosting = false;
    }
}
