@page "/Post/EditPost/{postId}"
@attribute [Authorize]
@inject IPostService postService
@inject IJSRuntime jsRuntime
@inject NavigationManager navigationManager

<div class="icon-input">
    <InputText id="title" class="form-control" @bind-Value="userPost.Title" placeholder="Post Title" />
    <textarea class="form-control" @bind="userPost.Content" placeholder="Post Content"></textarea>
    <div class="input-icons">
        <div class="input-icon">
            <svg @onclick="OpenImagePicker" xmlns="http://www.w3.org/2000/svg" width="26" height="26" fill="currentColor" class="bi bi-card-image" viewBox="0 0 16 16">
                <path d="M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z" />
                <path d="M1.5 2A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-13zm13 1a.5.5 0 0 1 .5.5v6l-3.775-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12v.54A.505.505 0 0 1 1 12.5v-9a.5.5 0 0 1 .5-.5h13z" />
            </svg>
            <InputFile OnChange="HandleFileSelected" accept="image/*" hidden  id="inputImage"/>
        </div>
        <div class="input-icon" @onclick="OpenEmojiPicker">
            <svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" fill="currentColor" class="bi bi-emoji-smile" viewBox="0 0 16 16">
                <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
                <path d="M4.285 9.567a.5.5 0 0 1 .683.183A3.498 3.498 0 0 0 8 11.5a3.498 3.498 0 0 0 3.032-1.75.5.5 0 1 1 .866.5A4.498 4.498 0 0 1 8 12.5a4.498 4.498 0 0 1-3.898-2.25.5.5 0 0 1 .183-.683zM7 6.5C7 7.328 6.552 8 6 8s-1-.672-1-1.5S5.448 5 6 5s1 .672 1 1.5zm4 0c0 .828-.448 1.5-1 1.5s-1-.672-1-1.5S9.448 5 10 5s1 .672 1 1.5z" />
            </svg>
        </div>
    </div>
    @if (PreviewUrl is not null)
    {
        <div>
            <img src="@PreviewUrl" />
        </div>
    }
    @if (!string.IsNullOrWhiteSpace(ErrorMessage))
    {
        <div class="validation-message">
            @ErrorMessage
        </div>
    }
    <button class="btn btn-primary post-btn" @onclick="UpdatePost">Update Post</button>
</div>

@code {
    [Parameter]
    public string postId { get; set; }

    private PostDto userPost = new PostDto(); // Assuming you have a PostDto class for posts
    private string PreviewUrl;
    private string ErrorMessage;
    public IBrowserFile imageFile;

    protected override async Task OnInitializedAsync()
    {
        userPost = await postService.GetPostAsync(Guid.Parse(postId));

    }

    private async Task UpdatePost()
    {
        if (userPost != null && userPost.Title != null)
        {
            await postService.UpdatePostAsync(userPost);
            navigationManager.NavigateTo($"/Profile");
        }
        else{
            ErrorMessage = "Post is required";
        }
    }

    private void OpenImagePicker()
    {
        // Add logic to open the image picker
    }

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        imageFile = e.File;
        if (imageFile != null)
        {
            var buffer = new byte[imageFile.Size];
            await imageFile.OpenReadStream().ReadAsync(buffer);
            PreviewUrl = $"data:image/png;base64,{Convert.ToBase64String(buffer)}";
        }
    }

    private void OpenEmojiPicker()
    {
        // Add logic to open the emoji picker
    }
}
